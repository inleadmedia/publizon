<?php
/**
 * @file
 *
 */

/**
 * Implements hook_flush_caches().
 *
 * Ensures that all caches used by the module is flush on cache clear. The
 * module also comes with drush support for clearing these caches.
 *
 * @see publizon_library.drush.inc
 */
function publizon_library_flush_caches() {
  return array('cache_publizon_library');
}

/**
 * Helper function that findes all libraries stored in the Publizon configuration
 * and returns the library names indexed by retailer id.
 *
 * @staticvar array $retailers
 *  Static cache used to speed-up the search if call more than once.
 * @param bool $reset
 *  If TRUE the static cache will be rebuild. Defaults to FALSE.
 * @return array
 *  Library names indexed by retailer id.
 */
function publizon_get_libraries($reset = FALSE) {
  static $retailers;
  if (!isset($retailers) || $reset) {
    $publizon = variable_get('publizon', array());
    if (empty($publizon) || !isset($publizon['libraries']) || !count($publizon['libraries'])) {
      // We are missing som library configureation here.
      drupal_set_message(t('You need to login as administrtor and configure Publizon library lists'), 'warning', FALSE);
      return array();
    }

    // Configuration load, so build library array.
    $retailers = array();
    foreach ($publizon['libraries'] as $library) {
      $retailers[$library['retailer_id']] = $library['library_name'];
    }
  }

  // Sort the libraries by library name.
  setlocale(LC_ALL, 'da_DK.UTF8');
  asort($retailers, SORT_LOCALE_STRING);
  setlocale(LC_ALL, '');

  return $retailers;
}

/**
 * Helper function that loads Publizon configuration information about a given
 * library and return the information as an array. The array contains
 * retailer_id, retailer_key_code and library_name.
 *
 * @staticvar type $libraries
 *  Static cache used to speed-up the search if call more than once.
 * @param type $retailer_id
 *  Retailer id that identifies the library at Publizon.
 * @param type $reset
 *  If TRUE the static cache will be rebuild. Defaults to FALSE.
 * @return array
 *  Basic information about the library entered at the publizon administration
 *  interface.
 */
function publizon_get_library($retailer_id, $reset = FALSE) {
  static $libraries;
  if (!isset($libraries) || !isset($libraries[$retailer_id]) || $reset) {
    $publizon = variable_get('publizon', array());
    if (empty($publizon) || !isset($publizon['libraries']) || !count($publizon['libraries'])) {
      // We are missing som library configureation here.
      drupal_set_message(t('You need to login as administrtor and configure Publizon library lists'), 'warning', FALSE);
      return array();
    }

    $libraries = array();
    foreach ($publizon['libraries'] as $library) {
      if ($library['retailer_id'] == $retailer_id) {
        $libraries[$retailer_id] = $library;
        break;
      }
    }
  }

  return isset($libraries[$retailer_id]) ? $libraries[$retailer_id] : FALSE;
}