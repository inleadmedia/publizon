<?php
/**
 * @file
 * Install user mapping table from encode Publizon id to Drupal user id. It also
 * migrates the old elib user mapping if the table exists on module
 * installation.
 */

/**
 * Implements hook_schema().
 */
function publizon_user_schema() {
  $schema = array();

  $schema['publizon_user'] = array(
    'description' => t('Mapping from Publizon user to local Drupal user.'),
    'fields' => array(
      'uid' => array(
        'description' => '{users}.uid for user',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'pid' => array(
        'description' => 'Encoded user id provied in communication with the web-service.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'retailer_id' => array(
        'description' => 'The Publizon retailer id belonging to this user record.',
        'type' => 'varchar',
        'length' => 50,
      ),
    ),
    'indexes' => array(
      'pid' => array('pid'),
    ),
    'primary key' => array('uid'),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function publizon_user_install() {
  // Install database schema.
  drupal_install_schema('publizon_user');

  // Check if old table exits (upgrade path from elib).
  if (db_table_exists('elib_user')) {
    $query = "INSERT INTO {publizon_user} (uid, pid, retailer_id)
              SELECT uid, elib_id, elib_library
                FROM {elib_user}";
    db_query($query);
  }
}

/**
 * Implements hook_uninstall().
 */
function publizon_user_uninstall() {
  // Remove the database table, it's comment out because it will remove all user
  // mapping from the database. I don't think we ever wants to do that.
  //drupal_uninstall_schema('publizon_user');
}